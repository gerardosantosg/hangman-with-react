{"version":3,"sources":["Lives.js","WinLose.js","Blanks.js","Buttons.js","App.js","index.js"],"names":["Lives","lives","className","WinLose","selectedCountryArray","initialDashesRef","join","current","Blanks","testArray","console","log","map","character","key","Math","random","Buttons","aRef","useRef","bRef","cRef","dRef","eRef","fRef","gRef","hRef","iRef","jRef","kRef","lRef","mRef","nRef","oRef","pRef","qRef","rRef","sRef","tRef","uRef","vRef","wRef","xRef","yRef","zRef","selectedIndex","floor","useState","chosenLetters","setChosenLetters","selectedCountry","split","useEffect","initialDashes","i","length","push","doDashes","setTestArray","setLives","clicked","letter","includes","j","ref","onClick","innerText","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e3ca688.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Lives = ({ lives }) => {\r\n  const livesColor = () => {\r\n    if (lives === 7) return 'seven'\r\n    else if (lives === 6) return 'six'\r\n    else if (lives === 5) return 'five'\r\n    else if (lives === 4) return 'four'\r\n    else if (lives === 3) return 'three'\r\n    else if (lives === 2) return 'two'\r\n    else return 'one'\r\n  }\r\n  return (\r\n    <div className='lives'>\r\n      <h3>Lives</h3>\r\n      <h2 className={livesColor()}>{lives}</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Lives\r\n","import React from 'react'\r\n\r\nconst WinLose = ({ selectedCountryArray, initialDashesRef, lives }) => {\r\n  return (\r\n    <div className='finalPoster'>\r\n      <section\r\n        className={\r\n          selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n            ? 'win show'\r\n            : 'win'\r\n        }\r\n      >\r\n        <h6>{`You won! the answer was ${selectedCountryArray.join('')}`}</h6>\r\n        <form>\r\n          <button>Play Again</button>\r\n        </form>\r\n      </section>\r\n      <section className={lives === 0 ? 'lose show' : 'lose'}>\r\n        <h6>{`You lost, the answer was ${selectedCountryArray.join('')}`}</h6>\r\n        <form>\r\n          <button>Play Again</button>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WinLose\r\n","import React from 'react'\r\nimport WinLose from './WinLose'\r\nconst Blanks = ({\r\n  testArray,\r\n  selectedCountryArray,\r\n  initialDashesRef,\r\n  lives,\r\n}) => {\r\n  console.log(testArray)\r\n  return (\r\n    <>\r\n      <div className='blanks'>\r\n        {testArray.map((character) => (\r\n          <span key={Math.random()}>{character}</span>\r\n        ))}\r\n      </div>\r\n      <WinLose\r\n        selectedCountryArray={selectedCountryArray}\r\n        initialDashesRef={initialDashesRef}\r\n        lives={lives}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Blanks\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport Lives from './Lives'\r\nimport Blanks from './Blanks'\r\nconst Buttons = () => {\r\n  const aRef = useRef()\r\n  const bRef = useRef()\r\n  const cRef = useRef()\r\n  const dRef = useRef()\r\n  const eRef = useRef()\r\n  const fRef = useRef()\r\n  const gRef = useRef()\r\n  const hRef = useRef()\r\n  const iRef = useRef()\r\n  const jRef = useRef()\r\n  const kRef = useRef()\r\n  const lRef = useRef()\r\n  const mRef = useRef()\r\n  const nRef = useRef()\r\n  const oRef = useRef()\r\n  const pRef = useRef()\r\n  const qRef = useRef()\r\n  const rRef = useRef()\r\n  const sRef = useRef()\r\n  const tRef = useRef()\r\n  const uRef = useRef()\r\n  const vRef = useRef()\r\n  const wRef = useRef()\r\n  const xRef = useRef()\r\n  const yRef = useRef()\r\n  const zRef = useRef()\r\n  let selectedIndex = useRef(Math.floor(Math.random() * 32))\r\n  const [chosenLetters, setChosenLetters] = useState([])\r\n  const secretCountries = [\r\n    'MEXICO',\r\n    'COLOMBIA',\r\n    'CANADA',\r\n    'BRAZIL',\r\n    'ARGENTINA',\r\n    'CHILE',\r\n    'RUSSIA',\r\n    'SWEEDEN',\r\n    'UKRAINE',\r\n    'GERMANY',\r\n    'ITALY',\r\n    'SPAIN',\r\n    'FRANCE',\r\n    'JAPAN',\r\n    'AUSTRALIA',\r\n    'GHANA',\r\n    'SENEGAL',\r\n    'NIGERIA',\r\n    'EGYPT',\r\n    'MADAGASCAR',\r\n    'CHINA',\r\n    'GREECE',\r\n    'CROATIA',\r\n    'PERU',\r\n    'PANAMA',\r\n    'VENEZUELA',\r\n    'HUNGARY',\r\n    'NORWAY',\r\n    'ICELAND',\r\n    'THAILAND',\r\n    'INDIA',\r\n    'ENGLAND',\r\n  ]\r\n  const selectedCountry = secretCountries[selectedIndex.current]\r\n  let selectedCountryArray = selectedCountry.split('')\r\n\r\n  useEffect(() => {\r\n    console.log(selectedCountry)\r\n  }, [selectedCountry])\r\n\r\n  const initialDashes = []\r\n  const doDashes = () => {\r\n    for (let i = 0; i < selectedCountry.length; i++) {\r\n      initialDashes.push('_')\r\n    }\r\n    return initialDashes\r\n  }\r\n  const initialDashesRef = useRef(doDashes())\r\n\r\n  const [testArray, setTestArray] = useState([initialDashes])\r\n  const [lives, setLives] = useState(7)\r\n\r\n  const clicked = (letter) => {\r\n    setChosenLetters([...chosenLetters, letter])\r\n\r\n    if (\r\n      !selectedCountry.includes(letter) &&\r\n      !chosenLetters.includes(letter) &&\r\n      lives !== 0 &&\r\n      selectedCountryArray.join('') !== initialDashesRef.current.join('')\r\n    ) {\r\n      setLives(lives - 1)\r\n    } else {\r\n      for (let j = 0; j < selectedCountryArray.length; j++) {\r\n        if (\r\n          selectedCountryArray[j] === letter &&\r\n          initialDashesRef.current[j] === '_'\r\n        ) {\r\n          initialDashesRef.current[j] = letter\r\n          setTestArray([initialDashesRef.current])\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <main>\r\n        <button\r\n          ref={aRef}\r\n          className={\r\n            chosenLetters.includes('A') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(aRef.current.innerText)}\r\n        >\r\n          A\r\n        </button>\r\n        <button\r\n          ref={bRef}\r\n          className={\r\n            chosenLetters.includes('B') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(bRef.current.innerText)}\r\n        >\r\n          B\r\n        </button>\r\n        <button\r\n          ref={cRef}\r\n          className={\r\n            chosenLetters.includes('C') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(cRef.current.innerText)}\r\n        >\r\n          C\r\n        </button>\r\n        <button\r\n          ref={dRef}\r\n          className={\r\n            chosenLetters.includes('D') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(dRef.current.innerText)}\r\n        >\r\n          D\r\n        </button>\r\n        <button\r\n          ref={eRef}\r\n          className={\r\n            chosenLetters.includes('E') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(eRef.current.innerText)}\r\n        >\r\n          E\r\n        </button>\r\n        <button\r\n          ref={fRef}\r\n          className={\r\n            chosenLetters.includes('F') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(fRef.current.innerText)}\r\n        >\r\n          F\r\n        </button>\r\n        <button\r\n          ref={gRef}\r\n          className={\r\n            chosenLetters.includes('G') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(gRef.current.innerText)}\r\n        >\r\n          G\r\n        </button>\r\n        <button\r\n          ref={hRef}\r\n          className={\r\n            chosenLetters.includes('H') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(hRef.current.innerText)}\r\n        >\r\n          H\r\n        </button>\r\n        <button\r\n          ref={iRef}\r\n          className={\r\n            chosenLetters.includes('I') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(iRef.current.innerText)}\r\n        >\r\n          I\r\n        </button>\r\n        <button\r\n          ref={jRef}\r\n          className={\r\n            chosenLetters.includes('J') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(jRef.current.innerText)}\r\n        >\r\n          J\r\n        </button>\r\n        <button\r\n          ref={kRef}\r\n          className={\r\n            chosenLetters.includes('K') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(kRef.current.innerText)}\r\n        >\r\n          K\r\n        </button>\r\n        <button\r\n          ref={lRef}\r\n          className={\r\n            chosenLetters.includes('L') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(lRef.current.innerText)}\r\n        >\r\n          L\r\n        </button>\r\n        <button\r\n          ref={mRef}\r\n          className={\r\n            chosenLetters.includes('M') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(mRef.current.innerText)}\r\n        >\r\n          M\r\n        </button>\r\n        <button\r\n          ref={nRef}\r\n          className={\r\n            chosenLetters.includes('N') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(nRef.current.innerText)}\r\n        >\r\n          N\r\n        </button>\r\n        <button\r\n          ref={oRef}\r\n          className={\r\n            chosenLetters.includes('O') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(oRef.current.innerText)}\r\n        >\r\n          O\r\n        </button>\r\n        <button\r\n          ref={pRef}\r\n          className={\r\n            chosenLetters.includes('P') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(pRef.current.innerText)}\r\n        >\r\n          P\r\n        </button>\r\n        <button\r\n          ref={qRef}\r\n          className={\r\n            chosenLetters.includes('Q') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(qRef.current.innerText)}\r\n        >\r\n          Q\r\n        </button>\r\n        <button\r\n          ref={rRef}\r\n          className={\r\n            chosenLetters.includes('R') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(rRef.current.innerText)}\r\n        >\r\n          R\r\n        </button>\r\n        <button\r\n          ref={sRef}\r\n          className={\r\n            chosenLetters.includes('S') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(sRef.current.innerText)}\r\n        >\r\n          S\r\n        </button>\r\n        <button\r\n          ref={tRef}\r\n          className={\r\n            chosenLetters.includes('T') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(tRef.current.innerText)}\r\n        >\r\n          T\r\n        </button>\r\n        <button\r\n          ref={uRef}\r\n          className={\r\n            chosenLetters.includes('U') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(uRef.current.innerText)}\r\n        >\r\n          U\r\n        </button>\r\n        <button\r\n          ref={vRef}\r\n          className={\r\n            chosenLetters.includes('V') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(vRef.current.innerText)}\r\n        >\r\n          V\r\n        </button>\r\n        <button\r\n          ref={wRef}\r\n          className={\r\n            chosenLetters.includes('W') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(wRef.current.innerText)}\r\n        >\r\n          W\r\n        </button>\r\n        <button\r\n          ref={xRef}\r\n          className={\r\n            chosenLetters.includes('X') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(xRef.current.innerText)}\r\n        >\r\n          X\r\n        </button>\r\n        <button\r\n          ref={yRef}\r\n          className={\r\n            chosenLetters.includes('Y') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(yRef.current.innerText)}\r\n        >\r\n          Y\r\n        </button>\r\n        <button\r\n          ref={zRef}\r\n          className={\r\n            chosenLetters.includes('Z') ||\r\n            lives === 0 ||\r\n            selectedCountryArray.join('') === initialDashesRef.current.join('')\r\n              ? 'clicked'\r\n              : ''\r\n          }\r\n          onClick={() => clicked(zRef.current.innerText)}\r\n        >\r\n          Z\r\n        </button>\r\n      </main>\r\n      <Lives lives={lives} />\r\n      <Blanks\r\n        testArray={testArray}\r\n        selectedCountryArray={selectedCountryArray}\r\n        initialDashesRef={initialDashesRef}\r\n        lives={lives}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Buttons\r\n","import React from 'react'\nimport './App.css'\nimport Buttons from './Buttons'\n\nconst App = () => {\n  return (\n    <div className='container'>\n      <h1>Epic Hangman Game!</h1>\n      <h4>Guess the country</h4>\n      <Buttons />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}